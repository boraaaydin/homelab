services:
  seaweedfs-master:
    container_name: seaweedfs-master
    image: ${DOCKER_IMAGE}:${DOCKER_TAG}
    command: master -ip=seaweedfs-master -ip.bind=0.0.0.0 -metricsPort=9327
    environment:
      - WEED_MASTER_VOLUME_SIZE_LIMIT_MB=${WEED_MASTER_VOLUME_SIZE_LIMIT_MB:-1000}
    labels:
      - 'traefik.enable=true'
      # HTTP Router - Master (9333)
      - 'traefik.http.routers.seaweedfs-master.rule=Host(`${DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.seaweedfs-master.entrypoints=web'
      - 'traefik.http.routers.seaweedfs-master.middlewares=redirect-to-https'
      - 'traefik.http.routers.seaweedfs-master.service=seaweedfs-master'
      # HTTPS Router - Master (9333)
      - 'traefik.http.routers.seaweedfs-master-secure.rule=Host(`${DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.seaweedfs-master-secure.entrypoints=websecure'
      - 'traefik.http.routers.seaweedfs-master-secure.tls=true'
      - 'traefik.http.routers.seaweedfs-master-secure.tls.certresolver=cloudflare'
      - 'traefik.http.routers.seaweedfs-master-secure.service=seaweedfs-master'
      # Services
      - 'traefik.http.services.seaweedfs-master.loadbalancer.server.port=9333'
      # Middleware for HTTPS redirect
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https'
      - 'traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9333/cluster/status"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - shared_network

  seaweedfs-volume:
    container_name: seaweedfs-volume
    image: ${DOCKER_IMAGE}:${DOCKER_TAG}
    command: volume -mserver=seaweedfs-master:9333 -ip=seaweedfs-volume -ip.bind=0.0.0.0 -port=8080 -metricsPort=9328
    volumes:
      - './seaweedfs_data:/data'
    depends_on:
      seaweedfs-master:
        condition: service_healthy
    labels:
      - 'traefik.enable=true'
      # HTTP Router - Volume (8080)
      - 'traefik.http.routers.seaweedfs-volume.rule=Host(`${VOLUME_DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.seaweedfs-volume.entrypoints=web'
      - 'traefik.http.routers.seaweedfs-volume.middlewares=redirect-to-https'
      - 'traefik.http.routers.seaweedfs-volume.service=seaweedfs-volume'
      # HTTPS Router - Volume (8080)
      - 'traefik.http.routers.seaweedfs-volume-secure.rule=Host(`${VOLUME_DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.seaweedfs-volume-secure.entrypoints=websecure'
      - 'traefik.http.routers.seaweedfs-volume-secure.tls=true'
      - 'traefik.http.routers.seaweedfs-volume-secure.tls.certresolver=cloudflare'
      - 'traefik.http.routers.seaweedfs-volume-secure.service=seaweedfs-volume'
      # Services
      - 'traefik.http.services.seaweedfs-volume.loadbalancer.server.port=8080'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/status"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - shared_network

  seaweedfs-filer:
    container_name: seaweedfs-filer
    image: ${DOCKER_IMAGE}:${DOCKER_TAG}
    command: filer -master=seaweedfs-master:9333 -ip=seaweedfs-filer -ip.bind=0.0.0.0 -metricsPort=9329
    volumes:
      - './filer_data:/data'
    depends_on:
      seaweedfs-master:
        condition: service_healthy
    labels:
      - 'traefik.enable=true'
      # HTTP Router - Filer (8888)
      - 'traefik.http.routers.seaweedfs-filer.rule=Host(`${FILER_DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.seaweedfs-filer.entrypoints=web'
      - 'traefik.http.routers.seaweedfs-filer.middlewares=redirect-to-https'
      - 'traefik.http.routers.seaweedfs-filer.service=seaweedfs-filer'
      # HTTPS Router - Filer (8888)
      - 'traefik.http.routers.seaweedfs-filer-secure.rule=Host(`${FILER_DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.seaweedfs-filer-secure.entrypoints=websecure'
      - 'traefik.http.routers.seaweedfs-filer-secure.tls=true'
      - 'traefik.http.routers.seaweedfs-filer-secure.tls.certresolver=cloudflare'
      - 'traefik.http.routers.seaweedfs-filer-secure.service=seaweedfs-filer'
      # Services
      - 'traefik.http.services.seaweedfs-filer.loadbalancer.server.port=8888'
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8888/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - shared_network

  seaweedfs-s3:
    container_name: seaweedfs-s3
    image: ${DOCKER_IMAGE}:${DOCKER_TAG}
    command: s3 -filer=seaweedfs-filer:8888 -ip.bind=0.0.0.0 -config=/etc/seaweedfs/s3.json -allowedOrigins=*
    volumes:
      - './config/s3.json:/etc/seaweedfs/s3.json:ro'
    depends_on:
      seaweedfs-filer:
        condition: service_healthy
    environment:
      - S3_ACCESS_KEY=${S3_ACCESS_KEY}
      - S3_SECRET_KEY=${S3_SECRET_KEY}
    labels:
      - 'traefik.enable=true'
      # HTTP Router - S3 (8333)
      - 'traefik.http.routers.seaweedfs-s3.rule=Host(`${S3_DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.seaweedfs-s3.entrypoints=web'
      - 'traefik.http.routers.seaweedfs-s3.middlewares=redirect-to-https'
      - 'traefik.http.routers.seaweedfs-s3.service=seaweedfs-s3'
      # HTTPS Router - S3 (8333)
      - 'traefik.http.routers.seaweedfs-s3-secure.rule=Host(`${S3_DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.seaweedfs-s3-secure.entrypoints=websecure'
      - 'traefik.http.routers.seaweedfs-s3-secure.tls=true'
      - 'traefik.http.routers.seaweedfs-s3-secure.tls.certresolver=cloudflare'
      - 'traefik.http.routers.seaweedfs-s3-secure.middlewares=seaweedfs-s3-cors'
      - 'traefik.http.routers.seaweedfs-s3-secure.service=seaweedfs-s3'
      # CORS Middleware
      - 'traefik.http.middlewares.seaweedfs-s3-cors.headers.accesscontrolallowmethods=GET,POST,PUT,DELETE,OPTIONS,HEAD'
      - 'traefik.http.middlewares.seaweedfs-s3-cors.headers.accesscontrolalloworiginlist=http://localhost:3301,https://localhost:3301'
      - 'traefik.http.middlewares.seaweedfs-s3-cors.headers.accesscontrolallowheaders=*'
      - 'traefik.http.middlewares.seaweedfs-s3-cors.headers.accesscontrolallowcredentials=true'
      - 'traefik.http.middlewares.seaweedfs-s3-cors.headers.accesscontrolmaxage=100'
      - 'traefik.http.middlewares.seaweedfs-s3-cors.headers.addvaryheader=true'
      # Services
      - 'traefik.http.services.seaweedfs-s3.loadbalancer.server.port=8333'
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "8333"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    networks:
      - shared_network

networks:
  shared_network:
    external: true
