---
services:
  server:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2025.2.4}
    container_name: authentik-server
    restart: unless-stopped
    command: server
    environment:
      AUTHENTIK_REDIS__HOST: ${REDIS_HOST:-valkey}
      AUTHENTIK_REDIS__PASSWORD: ${REDIS_PASSWORD:-admin}
      AUTHENTIK_POSTGRESQL__HOST: ${PG_DB_HOST:-postgres}
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS:-}
    volumes:
      - ./media:/media
      - ./custom-templates:/templates
    env_file:
      - .env
    networks:
      - shared_network
    pids_limit: 100
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/healthz/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authentik.rule=Host(`${DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.authentik.entrypoints=web'
      - 'traefik.http.routers.authentik-secure.rule=Host(`${DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.authentik-secure.entrypoints=websecure'
      - 'traefik.http.routers.authentik-secure.tls=true'
      - 'traefik.http.routers.authentik-secure.tls.certresolver=cloudflare'
      - 'traefik.http.services.authentik.loadbalancer.server.port=9000'

  worker:
    image: ${AUTHENTIK_IMAGE:-ghcr.io/goauthentik/server}:${AUTHENTIK_TAG:-2025.2.4}
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    environment:
      AUTHENTIK_REDIS__HOST: ${REDIS_HOST:-valkey}
      AUTHENTIK_REDIS__PASSWORD: ${REDIS_PASSWORD:-admin}
      AUTHENTIK_POSTGRESQL__HOST: ${PG_DB_HOST:-postgres}
      AUTHENTIK_POSTGRESQL__USER: ${PG_USER:-authentik}
      AUTHENTIK_POSTGRESQL__NAME: ${PG_DB:-authentik}
      AUTHENTIK_POSTGRESQL__PASSWORD: ${PG_PASS}
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./media:/media
      - ./certs:/certs
      - ./custom-templates:/templates
    env_file:
      - .env
    networks:
      - shared_network
    pids_limit: 100
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/healthz/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

networks:
  shared_network:
    external: true
