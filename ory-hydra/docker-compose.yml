services:
  hydra-migrate:
    container_name: ${HYDRA_MIGRATE_CONTAINER}
    image: oryd/hydra:${HYDRA_VERSION}
    command: migrate sql -e --yes
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?sslmode=disable&max_conns=${DB_MAX_CONNS}&max_idle_conns=${DB_MAX_IDLE_CONNS}
    networks:
      - shared_network
    pids_limit: 100
    depends_on:
      hydra_postgres:
        condition: service_healthy

  hydra_postgres:
    container_name: hydra-postgres
    image: postgres:16
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - shared_network
    pids_limit: 100
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 3

  hydra:
    container_name: ${HYDRA_CONTAINER}
    image: oryd/hydra:${HYDRA_VERSION}
    command: serve -c /etc/config/hydra/config.yml all --dev
    volumes:
      - type: bind
        source: ./hydra/config.yml
        target: /etc/config/hydra/config.yml
    pull_policy: missing
    environment:
      - DSN=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:5432/${POSTGRES_DB}?sslmode=disable&max_conns=${DB_MAX_CONNS}&max_idle_conns=${DB_MAX_IDLE_CONNS}
    restart: unless-stopped
    depends_on:
      - hydra-migrate
      - hydra_postgres
    networks:
      - shared_network
    pids_limit: 100
    labels:
      - 'traefik.enable=true'
      # HTTP Router
      - 'traefik.http.routers.hydra.rule=Host(`${DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.hydra.entrypoints=web'
      # HTTPS Router
      - 'traefik.http.routers.hydra-secure.rule=Host(`${DOMAIN_PREFIX}.${DOMAIN}`)'
      - 'traefik.http.routers.hydra-secure.entrypoints=websecure'
      - 'traefik.http.routers.hydra-secure.tls=true'
      - 'traefik.http.routers.hydra-secure.tls.certresolver=cloudflare'
      # Service
      - 'traefik.http.services.hydra.loadbalancer.server.port=4444'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4444/health/ready"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  shared_network:
    external: true